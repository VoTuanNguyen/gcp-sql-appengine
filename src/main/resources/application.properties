# Setup connection with google cloud mysql

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver 

#Setup datasource url
#spring.datasource.url=jdbc:mysql://google/jpa_sql?\
#                    cloudSqlInstance=jpa-nguyevt2-1506:asia-northeast1:gcloud-sql&\
#                    socketFactory=com.google.cloud.sql.mysql.SocketFactory&\
#                    useSSL=false&user=nguyenvt2&password=123

spring.datasource.url=jdbc:postgresql://google/jpa_sql?\
                    cloudSqlInstance=jpa-nguyevt2-1506:asia-southeast1:gcloud-postgresql&\
                    socketFactory=com.google.cloud.sql.postgres.SocketFactory&\
                    useSSL=false&user=nguyenvt2&password=123
                   
#spring.datasource.username=nguyenvt2
#spring.datasource.password=123

# Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.
spring.datasource.initialization-mode=always

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true # remove wall of text

# JPA
spring.jpa.hibernate.ddl-auto=update

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect